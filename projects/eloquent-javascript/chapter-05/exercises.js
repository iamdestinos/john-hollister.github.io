// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////
//take an array of arrays and use reduce and concat to make one array of all values
function flatten(array) {
  let single = array.reduce(function(accumulator, current, index, collection){
    accumulator = accumulator.concat(current);
    console.log(current);
    return accumulator;
  }, []);

  return single;
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////
//
function loop(start, stop, update, action) {
  for(let i = start; stop(i); i = update(i)){
    action(i);
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////
//return true when given function returns true for every statement
function every(array, test) {
  for(let i = 0; i < array.length; i++){
    if(!test(array[i])){
      return false;
    }
  }
  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
  //replace spaces with empty strings
  let newStr = string.replace(/\s/g, '');
  //create two arrays to store the number of writing directions
  let ltr = [];
  let rtl = [];

  //iterate through newStr
  for(let i = 0; i < newStr.length; i++){
    let scriptName = characterScript(newStr.charCodeAt(i));
    //determine if scriptName is not equal to null
    if(scriptName !== null){
      if(scriptName.direction === 'ltr'){
        ltr.push(scriptName);
      } else {
        rtl.push(scriptName);
      }
    }
  }

  if(ltr.length > rtl.length){
    return 'ltr';
  } else {
    return 'rtl';
  }
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
